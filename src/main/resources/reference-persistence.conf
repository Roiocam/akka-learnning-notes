akka {
  loglevel = DEBUG

  # 如果没有序列化，事件到不了Actor
  actor {
    serialization-bindings {
      "com.iquantex.phoenix.typedactor.guide.protocol.CborSerializable" = jackson-cbor
    }
  }
  # 这里的参数比较重要
  persistence {
    # 内存版本持久化，不会持久化到文件
    #journal.plugin = "akka.persistence.journal.inmem"
    #snapshot-store.plugin = "akka.persistence.snapshot-store.local"
    #snapshot-store.local.dir = "target/snapshot"
    # JDBC 持久化
    journal {
      plugin = "jdbc-journal"
      auto-start-journals = ["jdbc-journal"]
    }
    snapshot-store {
      plugin = "jdbc-snapshot-store"
      auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }
  }

}

# 数据库配置

jdbc-journal {
    slick = ${slick}
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  slick = ${slick}
}

# the akka-persistence-jdbc provider in use for durable state store
jdbc-durable-state-store {
  slick = ${slick}
}

slick {
  profile = "slick.jdbc.H2Profile$"
  db {
    host = ${?DB_HOST}
    url = "jdbc:h2:file:./data/test;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=FALSE;INIT=CREATE SCHEMA IF NOT EXISTS PUBLIC"
    user = "sa"
    password = ""
    driver = "org.h2.Driver"
    numThreads = 5
    maxConnections = 5
    minConnections = 1
  }
}